/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TestsRouteImport } from './routes/tests'
import { Route as TestsCreateRouteImport } from './routes/tests.create'
import { Route as TestsNewRouteImport } from './routes/tests.new'
import { Route as TestsTestIdRouteImport } from './routes/tests.$testId'
import { Route as TestsTestIdEditRouteImport } from './routes/tests.$testId.edit'

// Create the individual route declarations
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

const TestsRoute = TestsRouteImport.update({
  id: '/tests',
  path: '/tests',
  getParentRoute: () => rootRouteImport,
} as any)

const TestsCreateRoute = TestsCreateRouteImport.update({
  id: '/tests/create',
  path: '/tests/create',
  getParentRoute: () => rootRouteImport,
} as any)

const TestsNewRoute = TestsNewRouteImport.update({
  id: '/tests/new',
  path: '/tests/new',
  getParentRoute: () => rootRouteImport,
} as any)

const TestsTestIdRoute = TestsTestIdRouteImport.update({
  id: '/tests/$testId',
  path: '/tests/$testId',
  getParentRoute: () => rootRouteImport,
} as any)

const TestsTestIdEditRoute = TestsTestIdEditRouteImport.update({
  id: '/tests/$testId/edit',
  path: '/tests/$testId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

// Create the route tree
export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tests': typeof TestsRoute
  '/tests/create': typeof TestsCreateRoute
  '/tests/new': typeof TestsNewRoute
  '/tests/$testId': typeof TestsTestIdRoute
  '/tests/$testId/edit': typeof TestsTestIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tests': typeof TestsRoute
  '/tests/create': typeof TestsCreateRoute
  '/tests/new': typeof TestsNewRoute
  '/tests/$testId': typeof TestsTestIdRoute
  '/tests/$testId/edit': typeof TestsTestIdEditRoute
}

export interface FileRoutesById {
  '/': typeof IndexRoute
  '/tests': typeof TestsRoute
  '/tests/create': typeof TestsCreateRoute
  '/tests/new': typeof TestsNewRoute
  '/tests/$testId': typeof TestsTestIdRoute
  '/tests/$testId/edit': typeof TestsTestIdEditRoute
}

export const routeTree = rootRouteImport.addChildren([
  IndexRoute,
  TestsRoute,
  TestsCreateRoute,
  TestsNewRoute,
  TestsTestIdRoute,
  TestsTestIdEditRoute,
])